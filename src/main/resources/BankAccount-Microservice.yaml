openapi: 3.0.0
info:
  title: Bank Accounts Microservice
  description: API para gestionar productos pasivos (cuentas bancarias).
  version: 1.0.0
servers:
  - url: https:///localhost:8080
    description: Servidor principal


paths:
  /accounts:
    post:
      summary: Crear una nueva cuenta bancaria
      operationId: createAccount
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountBase'
      responses:
        '201':
          description: Cuenta creada exitosamente
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /accounts/{accountId}:
    get:
      summary: Obtener detalles de una cuenta específica
      operationId: getAccountById
      parameters:
        - name: accountId
          in: path
          required: true
          description: ID de la cuenta bancaria
          schema:
            type: string
      responses:
        '200':
          description: Detalles de la cuenta bancaria
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      summary: Actualizar una cuenta bancaria
      operationId: updateAccount
      parameters:
        - name: accountId
          in: path
          required: true
          description: ID de la cuenta bancaria
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountBase'
      responses:
        '200':
          description: Cuenta actualizada exitosamente
          content:
              application/json:
                schema:
                  type: object
                  additionalProperties: true
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      summary: Eliminar una cuenta bancaria
      operationId: deleteAccount
      parameters:
        - name: accountId
          in: path
          required: true
          description: ID de la cuenta bancaria
          schema:
            type: string
      responses:
        '200':
          description: Cuenta eliminada exitosamente
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true

        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /accounts/all:
      get:
        summary: Obtener todas las cuentas bancarias
        operationId: getAllAccounts
        responses:
          '200':
            description: Lista de cuentas bancarias
            content:
                application/json:
                  schema:
                    type: object
                    additionalProperties: true

          '500':
            $ref: '#/components/responses/InternalServerError'

  /accounts/reporting/commissionReport:
    get:
      summary: Obtener el reporte de comisiones
      operationId: getCommissionReport
      parameters:
        - name: startDate
          in: query
          required: true
          description: Fecha de inicio del reporte
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          required: true
          description: Fecha de fin del reporte
          schema:
            type: string
            format: date
        - name: accountId
          in: query
          required: true
          description: ID de la cuenta bancaria
          schema:
            type: string
      responses:
        '200':
          description: Reporte de comisiones generado exitosamente
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true

        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /accounts/transactions:
    post:
      summary: Registrar una nueva transacción en la cuenta
      operationId: createTransaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        '201':
          description: Transacción registrada exitosamente
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true


        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/InternalServerError'

    get:
      summary: Obtener todas las transacciones
      operationId: getAllTransactions
      responses:
        '200':
          description: Historial completo de transacciones
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true

        '500':
          $ref: '#/components/responses/InternalServerError'

  /accounts/{accountId}/transactions:
    get:
      summary: Obtener transacciones por ID de cuenta
      operationId: getTransactionsByAccountId
      parameters:
        - name: accountId
          in: path
          required: true
          description: ID de la cuenta bancaria
          schema:
            type: string
      responses:
        '200':
          description: Transacciones de la cuenta especificada
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /accounts/reporting/salarySummary/{customerId}:
      get:
        summary: Obtener el reporte de salarios promedios para un cliente
        operationId: getSummarySalaryByCustomerId
        parameters:
          - name: customerId
            in: path
            required: true
            description: ID del usuario
            schema:
              type: string
        responses:
          '200':
            description: Resumen del usuario especificado
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties: true
          '404':
            $ref: '#/components/responses/NotFound'
          '500':
            $ref: '#/components/responses/InternalServerError'

  /debitCard/create:
    post:
      summary: Crear tarjeta de debito
      operationId: createDebitCard
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DebitCard'
      responses:
        '201':
          description: Tarjeat de debito creada exitosamente
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /debitCard/associeteAccountToCard:
    put:
      summary: Asociar cuenta a tarjeta de debito
      operationId: associeteAccountToCard
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cardId:
                  type: string
                  description: ID de la tarjeta de débito
                accountId:
                  type: string
                  description: ID de la cuenta a asociar
              required:
                - cardId
                - accountId
      responses:
        '200':
          description: Tarjeta actualizada exitosamente
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /debitCard/createTransaction:
    post:
      summary: Crear transacción desde cuenta de débito
      operationId: createTransactionFromDebitCard
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cardNumber:
                  type: string
                  description: Número de la tarjeta de débito
                transaction:
                  $ref: '#/components/schemas/Transaction'
              required:
                - cardNumber
                - transaction
      responses:
        '200':
          description: Transacción creada exitosamente
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /debitCard/{cardNumber}/getPrimaryAccountBalance:
    get:
      summary: Obtiene el balance de la cuenta principal asociada
      description: Devuelve el balance de la cuenta principal asociada a la tarjeta de débito especificada
      operationId: getPrimaryAccountBalance
      parameters:
        - name: cardNumber
          in: path
          description: Número de la tarjeta de débito
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Reporte de transacciones generado exitosamente
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true

        '400':
          description: Número de tarjeta inválido o no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


  /debitCard/{cardNumber}/transactions:
    get:
      summary: Obtiene los últimos 10 movimientos de una tarjeta de débito
      description: Devuelve un reporte con las últimas 10 transacciones realizadas con la tarjeta de débito especificada
      operationId: getLastTenTransactions
      parameters:
        - name: cardNumber
          in: path
          description: Número de la tarjeta de débito
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Reporte de transacciones generado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionReport'
        '400':
          description: Número de tarjeta inválido o no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


components:
  schemas:
    Person:
      type: object
      required:
        - dni
        - name
      properties:
        dni:
          type: string
          pattern: ^[0-9]{8,12}$
          example: "12345678"
        name:
          type: string
          minLength: 2
          maxLength: 100
          example: "Juan Pérez"


    AccountType:
      type: string
      enum:
        - savings
        - checking
        - fixed-term
      example: "savings"

    CustomerType:
        type: string
        enum:
          - personal
          - business
        example: "personal"

    CustomerSubtype:
        type: string
        enum:
          - regular
          - vip
          - pyme
        example: "vip"

    DebitCard:
        type: object
        required:
            - cardNumber
            - expirationDate
            - primaryAccountId
        properties:
            id:
                type: string
            cardNumber:
                type: string
                pattern: ^[0-9]{16}$
                example: "1234567812345678"
            expirationDate:
                type: string
                format: date-time
                example: "2025-12-31"
            primaryAccountId:
                type: string
            associatedAccountIds:
                type: array
                items:
                    type: string

    AccountBase:
      type: object
      required:
        - accountType
        - customerId
        - customerType
        - customerSubType
      properties:
        accountId:
          type: string
        transactionMovements:
          type: integer
        feePerTransaction:
          type: number
        movementLimit:
          type: integer
          description: Límite de movimientos
        minimumDailyAverage:
          type: number
          format: double
        accountType:
          $ref: '#/components/schemas/AccountType'
        balance:
          type: number
          minimum: 0
          example: 1500.75
        allowedDayOfMonth:
          type: string
        customerId:
          type: string
        customerSubType:
          $ref: '#/components/schemas/CustomerSubtype'
        customerType:
          $ref: '#/components/schemas/CustomerType'
        owners:
          type: array
          items:
            $ref: '#/components/schemas/Person'
        authorizedSigners:
          type: array
          items:
            $ref: '#/components/schemas/Person'
        maintenanceFee:
          type: number
          description: Comisión de mantenimiento
        monthlyMovementLimit:
          type: integer
          description: Límite de movimientos mensuales

    CheckingAccount:
      allOf:
        - $ref: '#/components/schemas/AccountBase'
        - type: object
          required:
            - maintenanceFee

    SavingsAccount:
      allOf:
        - $ref: '#/components/schemas/AccountBase'
        - type: object
          required:
            - monthlyMovementLimit

    FixedTermAccount:
      allOf:
        - $ref: '#/components/schemas/AccountBase'
        - type: object
          required:
            - allowedDayOfMonth

    CommissionReport:
        type: object
        required:
            - accountId
            - totalCommission
            - transactionCount
            - startDate
            - endDate
        properties:
            accountId:
              type: string
            totalCommission:
              type: number
            transactionCount:
              type: integer
              format: int64
            startDate:
              type: string
              format: date-time
            endOfDate:
              type: string
              format: date-time

    AccountResume:
      type: object
      required:
        - accountId
        - accountType
        - averageBalance
      properties:
        accountId:
          type: string
        accountType:
          $ref: '#/components/schemas/AccountType'
        averageBalance:
          type: number
          example: 1500.75

    TransactionReport:
      type: object
      description: Reporte de transacciones de una tarjeta de débito
      properties:
        cardNumber:
          type: string
          description: Número de la tarjeta de débito
          example: "4539123456789012"
        generationDate:
          type: string
          format: date-time
          description: Fecha y hora de generación del reporte
          example: "2025-04-14T14:30:45"
        transactions:
          type: array
          description: Lista de transacciones incluidas en el reporte
          items:
            $ref: '#/components/schemas/Transaction'
        transactionCount:
          type: integer
          description: Número total de transacciones en el reporte
          example: 10
        oldestTransactionDate:
          type: string
          format: date-time
          description: Fecha de la transacción más antigua en el reporte
          example: "2025-03-15T09:23:11"
        newestTransactionDate:
          type: string
          format: date-time
          description: Fecha de la transacción más reciente en el reporte
          example: "2025-04-13T18:45:22"

    Transaction:
      type: object
      required:
        - type
        - amount
        - sourceAccountId
        - transactionMode
      properties:
        isByCreditCard:
            type: boolean
            example: false
        transactionId:
          type: string
        date:
          type: string
          format: date-time
        transactionMode:
          type: string
          enum:
            - single_account
            - inter_account
        type:
          type: string
          enum:
            - deposit
            - withdrawal
          example: "deposit"
        amount:
          type: number
        sourceAccountId:
          type: string
        destinyAccountId:
          type: string

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: "VALIDATION_ERROR"
        message:
          type: string
          example: "El campo accountType es requerido"
        details:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              message:
                type: string

  responses:
    BadRequest:
      description: Solicitud incorrecta
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: "BAD_REQUEST"
            message: "Parámetros de solicitud inválidos"

    NotFound:
      description: Recurso no encontrado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: "NOT_FOUND"
            message: "Cuenta no encontrada"

    ValidationError:
      description: Error de validación
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: "VALIDATION_ERROR"
            message: "Error de validación en los datos de entrada"
            details:
              - field: "initialDeposit"
                message: "El depósito inicial debe ser mayor que cero"
              - field: "accountType"
                message: "El tipo de cuenta debe ser uno de: savings, checking, fixed-term"

    InternalServerError:
      description: Error interno del servidor
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: "INTERNAL_SERVER_ERROR"
            message: "Ha ocurrido un error interno. Intente nuevamente más tarde."